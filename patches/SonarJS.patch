diff --git a/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts b/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts
index d42152607..7a0185397 100644
--- a/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts
+++ b/eslint-bridge/src/linting/eslint/rules/helpers/lva.ts
@@ -18,8 +18,8 @@
  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  */
 import { Rule, Scope } from 'eslint';
-import Variable = Scope.Variable;
-import CodePathSegment = Rule.CodePathSegment;
+type Variable = Scope.Variable;
+type CodePathSegment = Rule.CodePathSegment;
 import * as estree from 'estree';
 import { TSESTree } from '@typescript-eslint/typescript-estree';
 
diff --git a/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts b/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts
index e68c4008c..e20d54167 100644
--- a/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts
+++ b/eslint-bridge/src/linting/eslint/rules/helpers/reaching-definitions.ts
@@ -19,9 +19,9 @@
  */
 import { Rule, Scope } from 'eslint';
 import * as estree from 'estree';
-import Variable = Scope.Variable;
-import CodePathSegment = Rule.CodePathSegment;
-import Reference = Scope.Reference;
+type Variable = Scope.Variable;
+type CodePathSegment = Rule.CodePathSegment;
+type Reference = Scope.Reference;
 
 type LiteralValue = string;
 
diff --git a/eslint-bridge/src/linting/eslint/rules/no-dead-store.ts b/eslint-bridge/src/linting/eslint/rules/no-dead-store.ts
index 3aa928ce7..27ea4cb92 100644
--- a/eslint-bridge/src/linting/eslint/rules/no-dead-store.ts
+++ b/eslint-bridge/src/linting/eslint/rules/no-dead-store.ts
@@ -28,9 +28,9 @@ import {
   isIdentifier,
   isAssignmentExpression,
 } from 'eslint-plugin-sonarjs/lib/utils/nodes';
-import CodePath = Rule.CodePath;
-import Variable = Scope.Variable;
-import CodePathSegment = Rule.CodePathSegment;
+type CodePath = Rule.CodePath;
+type Variable = Scope.Variable;
+type CodePathSegment = Rule.CodePathSegment;
 import {
   isUnaryExpression,
   isArrayExpression,
diff --git a/eslint-bridge/src/linting/eslint/rules/no-hook-setter-in-body.ts b/eslint-bridge/src/linting/eslint/rules/no-hook-setter-in-body.ts
index 43f1d4d8c..f32588bd2 100644
--- a/eslint-bridge/src/linting/eslint/rules/no-hook-setter-in-body.ts
+++ b/eslint-bridge/src/linting/eslint/rules/no-hook-setter-in-body.ts
@@ -20,8 +20,8 @@
 // https://sonarsource.github.io/rspec/#/rspec/S6442/javascript
 
 import { Rule, Scope as ESLintScope } from 'eslint';
-import Variable = ESLintScope.Variable;
-import Scope = ESLintScope.Scope;
+type Variable = ESLintScope.Variable;
+type Scope = ESLintScope.Scope;
 import * as estree from 'estree';
 import {
   getModuleNameOfImportedIdentifier,
diff --git a/eslint-bridge/src/linting/eslint/rules/no-redundant-assignments.ts b/eslint-bridge/src/linting/eslint/rules/no-redundant-assignments.ts
index 7e482d8e5..3cfe3bfb7 100644
--- a/eslint-bridge/src/linting/eslint/rules/no-redundant-assignments.ts
+++ b/eslint-bridge/src/linting/eslint/rules/no-redundant-assignments.ts
@@ -23,10 +23,10 @@ import { Rule, Scope } from 'eslint';
 import * as estree from 'estree';
 import { TSESTree } from '@typescript-eslint/experimental-utils';
 import { isAssignmentExpression } from 'eslint-plugin-sonarjs/lib/utils/nodes';
-import CodePath = Rule.CodePath;
-import Variable = Scope.Variable;
-import Reference = Scope.Reference;
-import CodePathSegment = Rule.CodePathSegment;
+type CodePath = Rule.CodePath;
+type Variable = Scope.Variable;
+type Reference = Scope.Reference;
+type CodePathSegment = Rule.CodePathSegment;
 import {
   getVariableFromIdentifier,
   reachingDefinitions,
